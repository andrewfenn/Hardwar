# - Try to find the SQLITE library
# Once done this will define
#
#  SQLITE_FOUND - system has sqlite
#  SQLITE_INCLUDE_DIR - the sqlite include directory
#  SQLITE_LIBRARIES - Link these to use sqlite
#  SQLITE_DEFINITIONS - Compiler switches required for using sqlite
#

if (WINDOWS) #Windows
	MESSAGE(STATUS "Using SQLite3 in dependencies")
	SET(SQLITE_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/dependencies/sqlite3)
   FILE(GLOB SQLITE_source ${SQLITE_INCLUDE_DIR}/*.c)
   ADD_LIBRARY(sqlite3_${PROJECT_NAME} ${SQLITE_source})
	SET( SQLITE_LIBRARIES sqlite3_${PROJECT_NAME})
	INCLUDE_DIRECTORIES("${SQLITE_INCLUDE_DIR}") 
else () #Unix
	FIND_PACKAGE(PkgConfig)
	PKG_SEARCH_MODULE(SQLITE sqlite3)
	SET(SQLITE_INCLUDE_DIR ${SQLITE_INCLUDE_DIRS})
	SET(SQLITE_LIB_DIR ${SQLITE_LIBDIR})
	SET(SQLITE_LIBRARIES ${SQLITE_LIBRARIES} CACHE STRING "")
endif ()

SEPARATE_ARGUMENTS(SQLITE_INCLUDE_DIR)
SEPARATE_ARGUMENTS(SQLITE_LIBRARIES)

SET(SQLITE_INCLUDE_DIR ${SQLITE_INCLUDE_DIR} CACHE PATH "")
SET(SQLITE_LIBRARIES ${SQLITE_LIBRARIES} CACHE STRING "")
SET(SQLITE_LIB_DIR ${SQLITE_LIB_DIR} CACHE PATH "")

if (SQLITE_INCLUDE_DIR AND SQLITE_LIB_DIR)
	SET(SQLITE_FOUND True)
endif ()
